# Import properties from the .properties file due to the Maven resource plugin configuration( see backend/pom.xml/<resources> section)
# (even if IDE mark 'app.properties' whit an error like "Cannot resolve file 'app.properties' ",
# the file exists in target/classes, which is part of classpath)
spring.config.import=classpath:app.properties
spring.application.name=backend

## Web configuration (auto-configured by <artifactId>spring-boot-starter-web</artifactId>)
server.port=${backend.port}
# API entrypoint
server.servlet.context-path=${backend.api.entrypoint}

# OAUTH2 / OIDC configuration
#okta.oauth2.issuer=https://dev-t258cewzxm8xksdu.us.auth0.com/
#okta.oauth2.audience=http://localhost:8080
#okta.oauth2.client-id=VXfestcTf7QrwEIHhqCmbjXXQHXPVpQU
#okta.oauth2.client-secret=7BJGwd0RrivLQ6XAnPuk0qYJCPZcXtOP942wezlHXPZ76Zm4Z6RI2_nYPuJcEObK
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-t258cewzxm8xksdu.us.auth0.com/
spring.security.oauth2.resourceserver.jwt.audiences=http://localhost:8080


## Database configuration (autoconfigured by <artifactId>jakarta.persistence-api</artifactId>)
spring.datasource.url=jdbc:postgresql://localhost:5432/sito-annunci-WebApp25
spring.datasource.username=postgres
spring.datasource.password=WebApp24

#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect <-- Generate a WARNING
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# Hibernate DDL auto (create, create-drop, update, validate)
spring.jpa.open-in-view=false


# CORS configuration for API (manually configured in WebMvcConfig.java)
cors.allowed-origins=${frontend.protocol}://${frontend.host}:${frontend.port}
